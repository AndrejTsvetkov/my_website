version: '3.7'

services:
  app:
    build:
      context: .
    restart: always
    volumes:
      - static_volume:/vol/web/static
      - media_volume:/vol/web/media
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DEBUG=0
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    depends_on:
      - db

  proxy:
    build:
      context: ./proxy
    restart: always
    volumes:
      - static_volume:/vol/web/static
      - media_volume:/vol/web/media
    ports:
      - "8080:8080"
    depends_on:
      - app

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - ./sample_database:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

volumes:
  static_volume:
  media_volume:
  postgres_data: